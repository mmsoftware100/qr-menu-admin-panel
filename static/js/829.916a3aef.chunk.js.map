{"version":3,"file":"static/js/829.916a3aef.chunk.js","mappings":"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","sources":["template/sections/item/v2/listing/item-list.jsx","template/pages/item/item-list.jsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["/*\n    Shop နဲ့ Category Dropdown နှစ်ခု လိုမယ်။\n    အဲ့တော အပေါ်မူတည်ပြီး menu တွေ ေပြာင်းနေမယ်ပေါ့ ဒါမျိုးလား?\n\n    table နဲ့ ခွဲပြီး ပြထားလဲ ရတယ်။\n    Category တစ်ခုကို table တစ်ခုပေါ့။\n    ဒါမှ မဟုတ် အကုန် တန်းစီပြထားလဲ ရတယ်။ \n    အကုန် တန်းစီပြလိုက်မယ်။\n    တစ်ဆိုင်ကို ဇယားတစ်ခု။\n\n*/\n\nimport {\n  Box,\n  Button,\n  Chip,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Stack,\n  Table,\n  Typography,\n} from '@mui/material';\n\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectItemDeleteStatus,\n    selectItemError,\n  selectMenuDeleteStatus,\n  selectMenuError,\n  selectSelectedItem,\n  selectSelectedMenu,\n  selectShopList,\n  setItemDeleteStatus,\n  setMenuDeleteStatus,\n  setSelectedItem,\n  setSelectedMenu,\n  setSelectedShop,\n} from 'features/main/mainSlice';\nimport { Delete, Edit } from '@mui/icons-material';\nimport Iconify from 'template/components/iconify';\nimport { useRouter } from 'template/routes/hooks';\nimport { useState } from 'react';\nimport { deleteMenuAsyncThunk } from 'features/menu/menuSlice';\nimport { selectAccessToken } from 'features/user/userSlice';\nimport { deleteItemAsyncThunk } from 'features/item/itemSlice';\n\n// const shopList = [1, 2, 3];\nexport default function ItemList() {\n  const shopList = useSelector(selectShopList);\n  // const selectedMenu = useSelector(selectSelectedMenu);\n  const selectedItem = useSelector(selectSelectedItem);\n  const accessToken = useSelector(selectAccessToken);\n  const itemDeleteStatus = useSelector(selectItemDeleteStatus);\n  const itemError = useSelector(selectItemError);\n\n  const dispatch = useDispatch();\n  const router = useRouter();\n\n  // ---------- internal state ------------ //\n  // for delete confirmation dialog\n  const [deleteConfirmationDialog, setDeleteConfirmationDialog] = useState(false);\n\n  const newItemClicked = (shop) => {\n    dispatch(setSelectedShop(shop.id));\n    router.push('/items/create');\n  };\n\n  const editItemClicked = (shop, item, menu, category) => {\n    // item should have a full structure\n    // like menu,\n    // menu also should have full structure like category\n    // menu.category = category;\n    // item.menu = menu;\n    let newObj = {...item, menu};\n    dispatch(setSelectedItem(newObj));\n    dispatch(setSelectedShop(shop.id));\n    router.push(`/items/${item.id}/detail`);\n  };\n\n  const deleteItemClicked = (item) => {\n    dispatch(setSelectedItem(item));\n    setDeleteConfirmationDialog(true);\n  };\n\n  const cancelDelete = () => {\n    // close dialog\n    setDeleteConfirmationDialog(false);\n  };\n  const confirmDelete = (id, access_token) => {\n    // close dialog\n    setDeleteConfirmationDialog(false);\n    let formData = new FormData();\n    formData.append('access_token', access_token);\n    formData.append('id', id);\n    dispatch(deleteItemAsyncThunk(formData));\n  };\n\n  const handleErrorDialogClose = () => {\n    // set error status to idle\n    dispatch(setItemDeleteStatus('idle'));\n  };\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"lg\">\n        {shopList.map((shop) => (\n          <Box key={shop.id}>\n            {/* categories header */}\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5} mt={5}>\n              <Typography variant=\"h4\">{shop.name}'s Items</Typography>\n\n              <Button\n                onClick={() => newItemClicked(shop)}\n                // component={Link}\n                // to={`/categories/create?shop_id=${shop.id}`}\n                variant=\"contained\"\n                color=\"inherit\"\n                startIcon={<Iconify icon=\"eva:plus-fill\" />}\n              >\n                New Item\n              </Button>\n            </Stack>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"left\">အမည်</TableCell>\n                  <TableCell align=\"right\">Menu</TableCell>\n                  <TableCell align=\"right\">Category</TableCell>\n                  <TableCell align=\"right\">ခလုပ်များ</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {shop.categories.map((category) =>\n                  category.menus.map((menu) =>\n                    menu.items.map((item) => (\n                      <TableRow\n                        key={item.id}\n                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                      >\n                        <TableCell component=\"th\" scope=\"row\">\n                          {item.name}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <Chip label={menu.name} variant=\"outlined\" />\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <Chip label={category.name} variant=\"outlined\" />\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <Button onClick={() => editItemClicked(shop, item, menu, category)}>\n                            <Edit />\n                          </Button>\n                          <Button onClick={() => deleteItemClicked(item)}>\n                            <Delete />\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  )\n                )}\n              </TableBody>\n            </Table>\n          </Box>\n        ))}\n      </Container>\n\n      {/* delete confirmation dialog */}\n      <Dialog\n        open={deleteConfirmationDialog}\n        // onClose={() => handleClose(id)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Delete Confirmation!</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure to delete {selectedItem.name} ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => cancelDelete(0)} autoFocus>\n            Cancel\n          </Button>\n          <Button onClick={() => confirmDelete(selectedItem.id, accessToken)} autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* delete error dialog */}\n      <Dialog\n        open={itemDeleteStatus === 'error'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Error!</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">{itemError}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleErrorDialogClose} autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { ItemListSection } from 'template/sections/item/v2/listing';\n\n// ----------------------------------------------------------------------\n\nexport default function ItemList() {\n  return (\n    <>\n      <Helmet>\n        <title> Item | List </title>\n      </Helmet>\n\n      <ItemListSection />\n    </>\n  );\n}\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');"],"names":["ItemList","shopList","useSelector","selectShopList","selectedItem","selectSelectedItem","accessToken","selectAccessToken","itemDeleteStatus","selectItemDeleteStatus","itemError","selectItemError","dispatch","useDispatch","router","useRouter","_useState","useState","_useState2","_slicedToArray","deleteConfirmationDialog","setDeleteConfirmationDialog","_jsxs","_Fragment","children","_jsx","Container","component","maxWidth","map","shop","Box","Stack","direction","alignItems","justifyContent","mb","mt","Typography","variant","name","Button","onClick","setSelectedShop","id","push","newItemClicked","color","startIcon","Iconify","icon","Table","TableHead","TableRow","TableCell","align","TableBody","categories","category","menus","menu","items","item","sx","border","scope","Chip","label","newObj","_objectSpread","setSelectedItem","concat","editItemClicked","Edit","deleteItemClicked","Delete","Dialog","open","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","access_token","formData","FormData","append","deleteItemAsyncThunk","confirmDelete","setItemDeleteStatus","Helmet","ItemListSection","createSvgIcon","d"],"sourceRoot":""}