{"version":3,"file":"static/js/25.1dd56bb5.chunk.js","mappings":"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","sources":["template/sections/login/login-view.jsx","template/pages/login.jsx"],"sourcesContent":["import { useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { alpha, useTheme } from '@mui/material/styles';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { useRouter } from 'template/routes/hooks';\n\nimport { bgGradient } from 'template/theme/css';\n\nimport Logo from 'template/components/logo';\nimport Iconify from 'template/components/iconify';\n\n// ----------------------------------------------------------------------\n\n// core import\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useEffect } from 'react';\n\nimport {\n  loginAsync,\n  loginStatus,\n  loginError,\n  setStatusIdle,\n  // actions\n  setErrors,\n  // selectors\n  selectUserRegistrationValidationError,\n} from '../../../features/user/userSlice';\n\n// ------------------------ //\n\nexport default function LoginView() {\n  const theme = useTheme();\n\n  const router = useRouter();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClick = () => {\n    router.push('/dashboard');\n  };\n\n  // -------- State Mangement ---------- //\n\n  // core\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  // internal state\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const [forgetPassword, setForgetPassword] = useState(false);\n\n  // selector hooks\n  const status = useSelector(loginStatus);\n  const error = useSelector(loginError);\n  const errors = useSelector(selectUserRegistrationValidationError);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    console.log({ name, value });\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const validationErrors = {};\n    if (!formData.email) {\n      validationErrors.email = 'Email is required';\n    } else if (!/^\\S+@\\S+\\.\\S+$/.test(formData.email)) {\n      validationErrors.email = 'Invalid email format';\n    }\n    if (!formData.password) {\n      validationErrors.password = 'Password is required';\n    }\n\n    if (Object.keys(validationErrors).length > 0) {\n      // setErrors(validationErrors);\n      dispatch(setErrors(validationErrors));\n    } else {\n      // Submit the form or send data to the server\n      // setErrors({}); // Clear any previous errors\n      dispatch(setErrors({}));\n      //console.log(formData); // You can send this data to your server for registration\n      //dispatch(registerThunk(formData));\n\n      const data = new FormData(event.currentTarget);\n      const email = data.get('email');\n      const password = data.get('password');\n      const requestData = { email, password };\n      dispatch(loginAsync(requestData));\n      // return;\n    }\n  };\n\n  const handleClose = () => {\n    dispatch(setStatusIdle());\n    setForgetPassword(false);\n  };\n\n  useEffect(() => {\n    if (status === 'succeeded') {\n      navigate('/');\n    }\n  }, [status]); // Include history as a dependency\n\n\n  // -------- UI Section ------------ //\n\n  const renderForm = (\n    <>\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n        <Stack spacing={3}>\n          <TextField\n            name=\"email\"\n            label=\"Email address\"\n            onChange={handleChange}\n            error={errors.hasOwnProperty('email')}\n            helperText={errors.email}\n          />\n\n          <TextField\n            name=\"password\"\n            label=\"Password\"\n            type={showPassword ? 'text' : 'password'}\n            onChange={handleChange}\n            error={errors.hasOwnProperty('password')}\n            helperText={errors.password}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\n                    <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Stack>\n\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" sx={{ my: 3 }}>\n          <Link variant=\"subtitle2\" underline=\"hover\" onClick={()=>setForgetPassword(true)}>\n            Forgot password?\n          </Link>\n        </Stack>\n\n        <LoadingButton\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"inherit\"\n          loading={status !== 'idle'}\n        >\n          Login\n        </LoadingButton>\n      </Box>\n    </>\n  );\n\n  const renderDialog = (\n    <Dialog\n      open={status === 'error'}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{'Error'}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">{error}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n\n  const renderForgetPasswordDialog = (\n    <Dialog\n      open={ forgetPassword }\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Forgot Password?</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">Please contact to QR Menu Facebook page for password reset process.</DialogContentText>\n      \n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  return (\n    <Box\n      sx={{\n        ...bgGradient({\n          color: alpha(theme.palette.background.default, 0.9),\n          imgUrl: '/assets/background/overlay_4.jpg',\n        }),\n        height: 1,\n      }}\n    >\n      <Logo\n        sx={{\n          position: 'fixed',\n          top: { xs: 16, md: 24 },\n          left: { xs: 16, md: 24 },\n        }}\n      />\n\n      <Stack alignItems=\"center\" justifyContent=\"center\" sx={{ height: 1 }}>\n        <Card\n          sx={{\n            p: 5,\n            width: 1,\n            maxWidth: 420,\n          }}\n        >\n          <Typography variant=\"h4\">Sign in to QR Menu</Typography>\n\n          <Typography variant=\"body2\" sx={{ mt: 2, mb: 5 }}>\n            Don’t have an account?\n            <Link href={'/register'}  variant=\"subtitle2\" sx={{ ml: 0.5 }}>\n              Get started\n            </Link>\n          </Typography>\n\n          <Stack direction=\"row\" spacing={2}>\n            <Button\n              fullWidth\n              size=\"large\"\n              color=\"inherit\"\n              variant=\"outlined\"\n              sx={{ borderColor: alpha(theme.palette.grey[500], 0.16) }}\n            >\n              <Iconify icon=\"eva:google-fill\" color=\"#DF3E30\" />\n            </Button>\n\n            <Button\n              fullWidth\n              size=\"large\"\n              color=\"inherit\"\n              variant=\"outlined\"\n              sx={{ borderColor: alpha(theme.palette.grey[500], 0.16) }}\n            >\n              <Iconify icon=\"eva:facebook-fill\" color=\"#1877F2\" />\n            </Button>\n\n            <Button\n              fullWidth\n              size=\"large\"\n              color=\"inherit\"\n              variant=\"outlined\"\n              sx={{ borderColor: alpha(theme.palette.grey[500], 0.16) }}\n            >\n              <Iconify icon=\"eva:twitter-fill\" color=\"#1C9CEA\" />\n            </Button>\n          </Stack>\n\n          <Divider sx={{ my: 3 }}>\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              OR\n            </Typography>\n          </Divider>\n\n          {renderForm}\n        </Card>\n      </Stack>\n\n      {renderDialog}\n      {renderForgetPasswordDialog}\n    </Box>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { LoginView } from 'template/sections/login';\n\n// ----------------------------------------------------------------------\n\nexport default function LoginPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Login | QR Menu </title>\n      </Helmet>\n\n      <LoginView />\n    </>\n  );\n}\n"],"names":["LoginView","theme","useTheme","_useState","useRouter","useState","_useState2","_slicedToArray","showPassword","setShowPassword","navigate","useNavigate","dispatch","useDispatch","_useState3","email","password","_useState4","formData","setFormData","_useState5","_useState6","forgetPassword","setForgetPassword","status","useSelector","loginStatus","error","loginError","errors","selectUserRegistrationValidationError","handleChange","e","_e$target","target","name","value","console","log","_objectSpread","_defineProperty","handleClose","setStatusIdle","useEffect","renderForm","_jsx","_Fragment","children","_jsxs","Box","component","onSubmit","event","preventDefault","validationErrors","test","Object","keys","length","setErrors","data","FormData","currentTarget","requestData","get","loginAsync","noValidate","sx","mt","Stack","spacing","TextField","label","onChange","hasOwnProperty","helperText","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","Iconify","icon","direction","alignItems","justifyContent","my","Link","variant","underline","LoadingButton","fullWidth","size","color","loading","renderDialog","Dialog","open","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","renderForgetPasswordDialog","bgGradient","alpha","palette","background","default","imgUrl","height","Logo","top","xs","md","left","Card","p","width","maxWidth","Typography","mb","href","ml","borderColor","grey","Divider","LoginPage","Helmet"],"sourceRoot":""}