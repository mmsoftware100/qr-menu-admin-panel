{"version":3,"file":"static/js/534.20a21a37.chunk.js","mappings":"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","sources":["template/sections/register/register-view.jsx","template/pages/register.jsx"],"sourcesContent":["import { useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { alpha, useTheme } from '@mui/material/styles';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { useRouter } from 'template/routes/hooks';\n\nimport { bgGradient } from 'template/theme/css';\n\nimport Logo from 'template/components/logo';\nimport Iconify from 'template/components/iconify';\n\n// ----------------------------------------------------------------------\n\n// core import\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useEffect } from 'react';\n\nimport {\n  loginStatus,\n  loginError,\n  // actions\n  setErrors,\n  // selectors\n  selectUserRegistrationValidationError,\n  registerThunk,\n} from 'features/user/userSlice';\n\n// ------------------------ //\n\nexport default function RegisterView() {\n  const theme = useTheme();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  // -------- State Mangement ---------- //\n\n  // core\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  // internal state\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirm_password: '',\n  });\n  // const [errors, setErrors] = useState({}); // Object to store validation errors\n\n  // selector hooks\n  const status = useSelector(loginStatus);\n  const errors = useSelector(selectUserRegistrationValidationError);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    console.log({ name, value });\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // validate form data\n    // Validation logic\n    const validationErrors = {};\n    if (!formData.name) {\n      validationErrors.name = 'Name is required';\n    }\n    if (!formData.email) {\n      validationErrors.email = 'Email is required';\n    } else if (!/^\\S+@\\S+\\.\\S+$/.test(formData.email)) {\n      validationErrors.email = 'Invalid email format';\n    }\n    if (!formData.password) {\n      validationErrors.password = 'Password is required';\n    }\n    if (!formData.confirm_password) {\n      validationErrors.confirm_password = 'Password is required';\n    }\n    if (formData.password != formData.confirm_password) {\n      validationErrors.same_password = 'Password and confirm password need to be match';\n    }\n\n    if (Object.keys(validationErrors).length > 0) {\n      // setErrors(validationErrors);\n      dispatch(setErrors(validationErrors));\n    } else {\n      // Submit the form or send data to the server\n      // setErrors({}); // Clear any previous errors\n      dispatch(setErrors({}));\n      console.log(formData); // You can send this data to your server for registration\n      dispatch(registerThunk(formData));\n      // return;\n    }\n  };\n\n  useEffect(() => {\n    if (status === 'succeeded') {\n      navigate('/');\n    }\n  }, [status]); // Include history as a dependency\n\n  // -------- UI Section ------------ //\n\n  const renderForm = (\n    <>\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n        <Stack spacing={3}>\n          <TextField\n            name=\"name\"\n            label=\"Full Name\"\n            onChange={handleChange}\n            error={errors.hasOwnProperty('name')}\n            helperText={errors.name}\n          />\n\n          <TextField\n            name=\"email\"\n            label=\"Email address\"\n            onChange={handleChange}\n            error={errors.hasOwnProperty('email')}\n            helperText={errors.email}\n          />\n\n          <TextField\n            name=\"password\"\n            label=\"Password\"\n            type={showPassword ? 'text' : 'password'}\n            onChange={handleChange}\n            error={errors.hasOwnProperty('password')}\n            helperText={errors.password}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\n                    <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <TextField\n            name=\"confirm_password\"\n            label=\"Confirm Password\"\n            type={showPassword ? 'text' : 'password'}\n            onChange={handleChange}\n            error={errors.hasOwnProperty('confirm_password')}\n            helperText={errors.confirm_password}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\n                    <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Stack>\n\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" sx={{ my: 3 }}>\n          \n          \n        </Stack>\n\n        <LoadingButton\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"inherit\"\n          loading={status === 'loading'}\n        >\n          Register\n        </LoadingButton>\n      </Box>\n    </>\n  );\n\n  return (\n    <Box\n      sx={{\n        ...bgGradient({\n          color: alpha(theme.palette.background.default, 0.9),\n          imgUrl: '/assets/background/overlay_4.jpg',\n        }),\n        height: 1,\n      }}\n    >\n      <Logo\n        sx={{\n          position: 'fixed',\n          top: { xs: 16, md: 24 },\n          left: { xs: 16, md: 24 },\n        }}\n      />\n\n      <Stack alignItems=\"center\" justifyContent=\"center\" sx={{ height: 1 }}>\n        <Card\n          sx={{\n            p: 5,\n            width: 1,\n            maxWidth: 420,\n          }}\n        >\n          <Typography variant=\"h4\">Register for QR Menu</Typography>\n\n          <Typography variant=\"body2\" sx={{ mt: 2, mb: 5 }}>\n            Already have an account?\n            <Link href={'/login'} variant=\"subtitle2\" sx={{ ml: 0.5 }}>\n              Login\n            </Link>\n          </Typography>\n\n          <Stack direction=\"row\" spacing={2}>\n            <Button\n              fullWidth\n              size=\"large\"\n              color=\"inherit\"\n              variant=\"outlined\"\n              sx={{ borderColor: alpha(theme.palette.grey[500], 0.16) }}\n            >\n              <Iconify icon=\"eva:google-fill\" color=\"#DF3E30\" />\n            </Button>\n\n            <Button\n              fullWidth\n              size=\"large\"\n              color=\"inherit\"\n              variant=\"outlined\"\n              sx={{ borderColor: alpha(theme.palette.grey[500], 0.16) }}\n            >\n              <Iconify icon=\"eva:facebook-fill\" color=\"#1877F2\" />\n            </Button>\n\n            <Button\n              fullWidth\n              size=\"large\"\n              color=\"inherit\"\n              variant=\"outlined\"\n              sx={{ borderColor: alpha(theme.palette.grey[500], 0.16) }}\n            >\n              <Iconify icon=\"eva:twitter-fill\" color=\"#1C9CEA\" />\n            </Button>\n          </Stack>\n\n          <Divider sx={{ my: 3 }}>\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              OR\n            </Typography>\n          </Divider>\n\n          {renderForm}\n        </Card>\n      </Stack>\n    </Box>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { RegisterView } from 'template/sections/register';\n\n// ----------------------------------------------------------------------\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Register | QR Menu </title>\n      </Helmet>\n\n      <RegisterView />\n    </>\n  );\n}\n"],"names":["RegisterView","theme","useTheme","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","navigate","useNavigate","dispatch","useDispatch","_useState3","name","email","password","confirm_password","_useState4","formData","setFormData","status","useSelector","loginStatus","errors","selectUserRegistrationValidationError","handleChange","e","_e$target","target","value","console","log","_objectSpread","_defineProperty","useEffect","renderForm","_jsx","_Fragment","children","_jsxs","Box","component","onSubmit","event","preventDefault","validationErrors","test","same_password","Object","keys","length","setErrors","registerThunk","noValidate","sx","mt","Stack","spacing","TextField","label","onChange","error","hasOwnProperty","helperText","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","Iconify","icon","direction","alignItems","justifyContent","my","LoadingButton","fullWidth","size","variant","color","loading","bgGradient","alpha","palette","background","default","imgUrl","height","Logo","top","xs","md","left","Card","p","width","maxWidth","Typography","mb","Link","href","ml","Button","borderColor","grey","Divider","RegisterPage","Helmet"],"sourceRoot":""}