{"version":3,"file":"static/js/208.c8ed4c29.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","../node_modules/qrcode.react/lib/esm/index.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport React, { useRef, useEffect, useState } from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n((qrcodegen2) => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7)\n        throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++)\n        row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)\n        throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion)\n          throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)\n          ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData())\n          bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)\n        appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length)\n        dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++)\n        rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7)\n        return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++)\n        rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks)\n          dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))\n        throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6)\n          right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7)\n        throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runX > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runY > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])\n            result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1)\n        return [];\n      else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7)\n          result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255)\n        throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++)\n        result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length)\n            result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map((_) => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0)\n        currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n  ];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]\n  ];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--)\n      bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond)\n      throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0)\n        throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data)\n        appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits))\n        throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length; ) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text))\n        throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\")\n        return [];\n      else if (_QrSegment.isNumeric(text))\n        return [_QrSegment.makeNumeric(text)];\n      else if (_QrSegment.isAlphanumeric(text))\n        return [_QrSegment.makeAlphanumeric(text)];\n      else\n        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0)\n        throw new RangeError(\"ECI assignment value out of range\");\n      else if (assignVal < 1 << 7)\n        appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else\n        throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits)\n          return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\")\n          result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrCode;\n  ((QrCode2) => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrSegment;\n  ((QrSegment2) => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules, margin = 0) {\n  const ops = [];\n  modules.forEach(function(row, y) {\n    let start = null;\n    row.forEach(function(cell, x) {\n      if (!cell && start !== null) {\n        ops.push(`M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`);\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n        } else {\n          ops.push(`M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`);\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };\n  }\n  return { x, y, h, w, excavation };\n}\nvar SUPPORTS_PATH2D = function() {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    style,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"style\",\n    \"imageSettings\"\n  ]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = useRef(null);\n  const _image = useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = useState(false);\n  useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function(row, rdx) {\n          row.forEach(function(cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({ height: size, width: size }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */ React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: { display: \"none\" },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */ React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */ React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: `0 0 ${numCells} ${numCells}`\n  }, otherProps), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: bgColor,\n    d: `M0,0 h${numCells}v${numCells}H0z`,\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = (props) => {\n  const _a = props, { renderAs } = _a, otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */ React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */ React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport {\n  QRCodeCanvas,\n  QRCodeSVG,\n  QRCode as default\n};\n"],"names":["_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","Container","options","arguments","length","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","componentName","ContainerRoot","_ref","theme","_extends","width","marginLeft","boxSizing","marginRight","display","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","_ref3","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref4","Math","max","xs","React","ref","className","_props$component","component","_props$disableGutters","_props$fixed","_props$maxWidth","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","generateUtilityClass","useUtilityClasses","_jsx","as","clsx","createContainer","styled","qrcodegen","qrcodegen2","__defProp","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","enumerable","configurable","writable","__spreadValues","a","b","prop","call","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","__objRest","source","exclude","target","indexOf","_step2","_iterator2","_QrCode","version","errorCorrectionLevel","dataCodewords","msk","_classCallCheck","this","modules","isFunction","MIN_VERSION","MAX_VERSION","RangeError","size","row","i","push","slice","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","mask","_createClass","x","y","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","j","drawAlignmentPattern","drawVersion","data","formatBits","rem","bits","getBit","color","floor","dy","dx","dist","abs","xx","yy","isDark","ver","ecl","getNumDataCodewords","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","result","_loop","_i9","forEach","block","right","vert","invert","Error","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","_step3","dark","_iterator3","sum","total","ceil","PENALTY_N4","step","pos","splice","core","currentRunColor","currentRunLength","pop","unshift","text","segs","QrSegment","makeSegments","encodeSegments","seg","makeBytes","dataUsedBits","minVersion","maxVersion","boostEcl","dataCapacityBits2","usedBits","getTotalBits","_i10","_arr","Ecc","MEDIUM","QUARTILE","HIGH","newEcl","_step4","bb","_iterator4","appendBits","mode","modeBits","numChars","numCharCountBits","_step5","_iterator5","getData","dataCapacityBits","min","padByte","degree","reedSolomonMultiply","divisor","_step6","map","_","_iterator6","_loop2","factor","shift","coef","z","QrCode","val","len","cond","_QrSegment","bitData","_step7","_iterator7","Mode","BYTE","digits","isNumeric","parseInt","substr","NUMERIC","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","makeNumeric","makeAlphanumeric","toUtf8ByteArray","assignVal","ECI","NUMERIC_REGEX","test","ALPHANUMERIC_REGEX","_step8","_iterator8","ccbits","Infinity","str","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","MARGIN_SIZE","DEFAULT_IMG_SCALE","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","includeMargin","imageSettings","numCells","defaultSize","scale","height","excavate","floorX","floorY","SUPPORTS_PATH2D","Path2D","addPath","QRCodeCanvas","_a","_a$size","_a$level","level","_a$bgColor","bgColor","_a$fgColor","fgColor","_a$includeMargin","style","otherProps","imgSrc","src","_canvas","useRef","_image","_useState","useState","_useState2","_slicedToArray","setIsImageLoaded","useEffect","current","canvas","ctx","getContext","encodeText","getModules","calculatedImageSettings","image","haveImageToRender","complete","naturalHeight","naturalWidth","pixelRatio","window","devicePixelRatio","fillStyle","fillRect","fill","rdx","cdx","drawImage","canvasStyle","img","onLoad","QRCodeSVG","_a$size2","_a$level2","_a$bgColor2","_a$fgColor2","_a$includeMargin2","xlinkHref","preserveAspectRatio","fgPath","viewBox","d","shapeRendering","QRCode","renderAs"],"sourceRoot":""}